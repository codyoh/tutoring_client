{"version":3,"sources":["logo.svg","sketches/PointObject.js","sketches/CircleObject.js","sketches/FreeHandObject.js","sketches/EraseObject.js","sketches/RectangleObject.js","sketches/sketch.js","components/CanvasToolBar.js","components/Canvas.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FreeHandObject","points","weight","color","p5","this","strokeWeight","p","scalar","i","length","x","stroke","beginShape","noFill","curveVertex","y","endShape","CircleObject","aX","aY","bX","bY","centerX","centerY","edgeX","edgeY","xClick","yClick","dist","window","innerWidth","innerHeight","radius","ellipse","EraseObject","RectangleObject","aCornerX","aCornerY","bCornerX","bCornerY","rectMode","CORNERS","rect","sketch","socket","io","secure","peers","on","socketId","emit","canvasSize","console","log","newPeer","Peer","initiator","data","p2pOffer","toSocketId","fromSocketId","id","signalData","payload","receivingPeer","signal","p2pAnswer","push","drawFreeHand","scaleBetweenCanvases","hist","PointObject","setEdge","setCorner","drawErase","screenSizeReceiver","redo","pop","clear","setup","font","drawType","toolBarDisplayed","width","height","otherCanvasSize","mouseOffset","client","otherCanvas","freeHandTest","preload","loadFont","askEmotionalState","response","prompt","windowResized","resizeCanvas","display","createCanvas","WEBGL","background","cursor","CROSS","textFont","textSize","fill","circle","undo","clearButtonPressed","strokeWeightChange","aWeight","changeDrawType","aDrawType","changeColor","aColor","addText","text","historyChange","aPosition","myCustomRedrawAccordingToNewPropsHandler","props","displayToolBar","mousePressed","mouseX","mouseY","circleTest","drawCircle","drawPoint","mouseDragged","mouseReleased","draw","CanvasToolBar","className","for","type","defaultValue","min","max","step","onInput","bind","value","onClick","Component","Canvas","state","redirect","setState","e","target","key","toggleDisplayToolBar","React","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.558eddd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","class FreeHandObject {\n\n    constructor(points, weight, color, p5) {\n      this.points = points;\n      this.strokeWeight = weight;\n      this.color = color;\n      this.p = p5;\n    }\n  \n    scale(scalar) {\n      for (var i = 0; i<this.points.length; i++) {\n        this.points[i].x = this.points[i].x + scalar;\n      }\n    }\n  \n    display(color) {\n      this.p.strokeWeight(this.strokeWeight);\n      this.p.stroke(this.color);\n      this.p.beginShape();\n      this.p.noFill();\n      this.p.curveVertex(this.points[0].x, this.points[0].y);\n      for (let i = 0; i < this.points.length; i+= 2){\n        this.p.curveVertex(this.points[i].x, this.points[i].y);\n       }\n      this.p.curveVertex(this.points[this.points.length-1].x, this.points[this.points.length-1].y);\n      this.p.endShape();\n    }\n  }\n  export default FreeHandObject;","class CircleObject {\n\n    constructor(aX, aY, bX, bY, weight, color, p5) {\n      this.centerX = aX;\n      this.centerY = aY;\n      this.edgeX = bX;\n      this.edgeY = bY;\n      this.weight = weight;\n      this.color = color;\n      this.p = p5;\n    }\n    clicked(xClick, yClick) {\n      // console.log(this.center.xPosition);\n      // console.log(xClick);\n      // console.log(yClick);\n      // console.log(\"-_-_-_-_\")\n      let distance = this.p.dist(xClick, yClick, this.x + window.innerWidth/2, this.y + window.innerHeight*.75/2);\n      // console.log(distance);\n      // console.log(this.radius);\n      // console.log(\"________\");\n      if (distance < this.radius) {\n        this.x = xClick - window.innerWidth/2;\n        this.y = yClick - window.innerHeight*.75/2;\n      }\n    }\n    setEdge(bX, bY) {\n      this.edgeX = bX;\n      this.edgeY = bY;\n    }\n    display() {\n      this.radius = this.p.dist(this.centerX, this.centerY, this.edgeX, this.edgeY);\n      this.p.noFill();\n      this.p.stroke(this.color);\n      this.p.strokeWeight(this.weight);\n      this.p.ellipse(this.centerX, this.centerY, this.radius*2);\n    }\n  }\n  export default CircleObject;","class FreeHandObject {\n\n    constructor(points, weight, color, p5) {\n      this.points = points;\n      this.strokeWeight = weight;\n      this.color = color;\n      this.p = p5;\n    }\n  \n    scale(scalar) {\n      for (var i = 0; i<this.points.length; i++) {\n        this.points[i].x = this.points[i].x + scalar;\n      }\n    }\n  \n    display(color) {\n      this.p.strokeWeight(this.strokeWeight);\n      this.p.stroke(this.color);\n      this.p.beginShape();\n      this.p.noFill();\n      this.p.curveVertex(this.points[0].x, this.points[0].y);\n      for (let i = 0; i < this.points.length; i+= 2){\n        this.p.curveVertex(this.points[i].x, this.points[i].y);\n       }\n      this.p.curveVertex(this.points[this.points.length-1].x, this.points[this.points.length-1].y);\n      this.p.endShape();\n      //console.log(this.points[0])\n    }\n  }\n  export default FreeHandObject;","class EraseObject {\n\n    constructor(points, weight, p5) {\n      this.points = points;\n      this.strokeWeight = weight*5;\n      this.p = p5;\n    }\n  \n    display() {\n      this.p.strokeWeight(this.strokeWeight);\n      this.p.stroke(250);\n      this.p.beginShape();\n      this.p.noFill();\n      this.p.curveVertex(this.points[0].x, this.points[0].y);\n      for (let i = 0; i < this.points.length; i+= 2){\n        this.p.curveVertex(this.points[i].x, this.points[i].y);\n       }\n      this.p.curveVertex(this.points[this.points.length-1].x, this.points[this.points.length-1].y);\n      this.p.endShape();\n    }\n  }\n  export default EraseObject;","class RectangleObject {\n\n    constructor(aX, aY, bX, bY, weight, color, p5) {\n      this.aCornerX = aX;\n      this.aCornerY = aY;\n      this.bCornerX = bX;\n      this.bCornerY = bY;\n      this.weight = weight;\n      this.color = color;\n      this.p = p5;\n    }\n    clicked(xClick, yClick) {\n      // console.log(this.center.xPosition);\n      // console.log(xClick);\n      // console.log(yClick);\n      // console.log(\"-_-_-_-_\")\n      let distance = this.p.dist(xClick, yClick, this.x + window.innerWidth/2, this.y + window.innerHeight*.75/2);\n      // console.log(distance);\n      // console.log(this.radius);\n      // console.log(\"________\");\n      if (distance < this.radius) {\n        this.x = xClick - window.innerWidth/2;\n        this.y = yClick - window.innerHeight*.75/2;\n      }\n    }\n    setCorner(bX, bY) {\n      this.bCornerX = bX;\n      this.bCornerY = bY;\n    }\n    display() {\n      // this.width = Math.abs(this.aCornerX - this.bCornerX);\n      // this.height = Math.abs(this.aCornerY - this.bCornerY);\n      this.p.noFill();\n      this.p.rectMode(this.p.CORNERS);\n      this.p.stroke(this.color);\n      this.p.strokeWeight(this.weight);\n      this.p.rect(this.aCornerX, this.aCornerY, this.bCornerX, this.bCornerY);\n    }\n  }\n  export default RectangleObject;","\nimport PointObject from './PointObject';\nimport CircleObject from './CircleObject';\nimport FreeHandObject from './FreeHandObject';\nimport EraseObject from './EraseObject';\nimport RectangleObject from './RectangleObject';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\n\n\nexport default function sketch(p5){\n\n//   constructor(){\n//     super()\n//   }\n  // const roomID;\n//   const roomID = sessionStorage.getItem('roomID');\n//   const socket = io.connect('localhost:5000');\n//   socket.emit('joinRoom', roomID);\n\n//   var stream = navigator.mediaDevices.getUserMedia({video: false, audio: true})\n//   \t.then(function (stream) {\n//   \t\tconsole.log(\"got media\");\n//       return stream\n// })\n\n//   \t\tvar peer = new SimplePeer({\n//   \t\t\tinitiator: true,\n//   \t\t\ttrickle: false,\n//   \t\t\t//stream: stream\n//   \t\t})\n\n//       peer.on('signal', function(data) {\n//   \t\t\tconsole.log(data);\n//         socket.emit('peerData', data);\n//   \t\t})\n\n//       peer.on('connect', () => {\n//         console.log(\"Peers are connected!!\");\n//       })\n//       //\n//       // document.getElementById(\"connect\").onclick = function(){\n//   \t\t// \tvar otherId = JSON.parse(document.getElementById('otherId').value);\n//   \t\t// \tpeer.signal(otherId);\n//   \t\t// }\n//       //\n//       // peer.on('stream', function(stream){\n//   \t\t// \tvar video = document.createElement('video');\n//   \t\t// \tdocument.getElementById(\"workspace\").appendChild(video);\n//   \t\t// \tvideo.srcObject = stream;\n//       //\n//   \t\t// \tvideo.play();\n\n\n//   socket.on('peerData', gotPeerData);\n\n//   function gotPeerData(data){\n//     console.log(JSON.stringify(data));\n//   }\n\n\nconst socket = io('http://173.230.148.240:4000', {secure: false})\n\nvar peers = {}\n\n    //when signaled that someone has joined the chat\n    //create a new peer as initiator and send p2pOffer to new participant\n    socket.on('newParticipant', (socketId)=>{\n        socket.emit('screenSize', canvasSize);\n        console.log('received new participant ' + socketId)\n        const newPeer = new Peer({ initiator: true })\n        peers[socketId] = newPeer\n        peers[socketId].on('signal', data => {\n          const socketIdsAndSignal = {\n            toSocketId: socketId,\n            fromSocketId: socket.id,\n            signalData: data\n          }\n          p2pOffer(socketIdsAndSignal);\n          \n        })\n      })  \n  \n      //when receiving a p2pOffer\n      socket.on('p2pOffer', payload => {\n        console.log('received p2pOffer')\n        console.log(payload)\n        //create a new peer to receive\n        const receivingPeer = new Peer();\n        //add new peer to the peers array\n        const socketId = socket.id\n        peers[socketId] = receivingPeer\n        //signal new peer, referenced from peer array\n        peers[socketId].signal(payload.signalData)\n  \n        peers[socketId].on('signal', data=> {\n          console.log('receiving peer has signaled itself')\n          const signalReply = {\n            toSocketId: payload.fromSocketId,\n            fromSocketId: payload.toSocketId,\n            signalData: data\n          }\n          p2pAnswer(signalReply)\n        })\n      })\n  \n      socket.on('p2pAnswer', payload => {\n        const socketId = payload.fromSocketId\n        console.log('answerers socket id: ' + socketId)\n        console.log('payload: ')\n        console.log(payload)\n        console.log('peers: ')\n        console.log(peers)\n        // this.peers.socketId.signal(payload.signalData)\n        peers[socketId].signal(payload.signalData)\n        peers[socketId].on('connect', ()=>{\n        // this.peers.socketId.on('connect', () => { \n          console.log('peers have connected!')\n        })\n      })\n\n      function p2pOffer(data){\n        socket.emit('p2pOffer', data)\n      }\n    \n      function p2pAnswer(data){\n        socket.emit('p2pAnswer', data)\n      }\n\n  // socket.on('sessionWillStart', askEmotionalState);\n  socket.on('startFreeHand', startFreeHandReceiver);\n  socket.on('freeHand', freeHandReceiver);\n  socket.on('release', releaseReceiver);\n  socket.on('point', pointReceiver);\n  socket.on('startCircle', startCircleReceiver);\n  socket.on('circle', circleReceiver);\n  socket.on('startRectangle', startRectangleReceiver);\n  socket.on('rectangle', rectangleReceiver);\n  socket.on('startErase', startEraseReceiver);\n  socket.on('erase', eraseReceiver);\n  socket.on('screenSize', screenSizeReceiver);\n  socket.on('requestScreenSize', sendScreenSize);\n  socket.on('undo', undoReceiver);\n  socket.on('redo', redoReceiver);\n  socket.on('clear', clearReceiver);\n  // socket.on('disconnect', disconnect);\n\n  var hist = [];\n  var redo = [];\n  var stroke = [];\n\n  var backgroundColor=250;\n  var color='black';\n  var drawType='freeHand';\n  var weight=1;\n  var font;\n  var toolBarDisplayed = false;\n  var canvasSize = {\n    width: window.innerWidth,\n    height: window.innerHeight*.9\n  }\n  var otherCanvasSize = {\n    width: window.innerWidth,\n    height: window.innerHeight*.9\n  }\n  var scaleBetweenCanvases = {\n    width: 1,\n    height: 1\n  }\n  var mouseOffset = { //Reconciles the mouse coordinate system with the drawing coordinate system\n    x: canvasSize.width/2,\n    y: canvasSize.height/2\n  }\n  var client = {\n    type: 'unknown'\n  }\n  var scalar;\n\n  p5.preload = function() {\n    font = p5.loadFont(\"https://cdnjs.cloudflare.com/ajax/libs/topcoat/0.8.0/font/SourceCodePro-Bold.otf\");\n  };\n\n  sketch.askEmotionalState = function() {\n    var response = prompt(\"How are you feeling young padowon?\");\n    console.log(response);\n  }\n\n  function sendScreenSize() {\n    socket.emit('screenSize', canvasSize);\n  }\n\n  function screenSizeReceiver(otherCanvas) {\n    console.log(\"screen size received\")\n    otherCanvasSize.height = otherCanvas.height;\n    otherCanvasSize.width = otherCanvas.width;\n    // canvasSize = {\n    //   width: window.innerWidth,\n    //   height: window.innerHeight*.9\n    // }\n    // if (otherCanvas.width*otherCanvas.height<canvasSize.width*canvasSize.height) {\n    //   client.type = 'tutor';\n    // }\n    // //console.log(client.type);\n    // if (client.type === \"tutor\") {\n    //   scaleBetweenCanvases.width = otherCanvas.width/canvasSize.width;\n    //   scaleBetweenCanvases.height = otherCanvas.height/canvasSize.height;\n    //   //console.log(scaleBetweenCanvases);\n    //   if (scaleBetweenCanvases.width > scaleBetweenCanvases.height) {\n    //     canvasSize.width = otherCanvas.width/scaleBetweenCanvases.width;\n    //     canvasSize.height = otherCanvas.height/scaleBetweenCanvases.width;\n    //     scalar = scaleBetweenCanvases.width;\n    //   }\n    //   else {\n    //     canvasSize.width = otherCanvas.width/scaleBetweenCanvases.height;\n    //     canvasSize.height = otherCanvas.height/scaleBetweenCanvases.height;\n    //     scalar = scaleBetweenCanvases.height;\n    //   }\n    //   mouseOffset.x = canvasSize.width/2;\n    //   mouseOffset.y = canvasSize.height/2;\n    //   p5.resizeCanvas(canvasSize.width, canvasSize.height);\n    //   socket.emit('screenSize', canvasSize);\n    // }\n    // scaleBetweenCanvases.width = otherCanvas.width/canvasSize.width;\n    // scaleBetweenCanvases.height = otherCanvas.height/canvasSize.height;\n    // //console.log(scaleBetweenCanvases);\n    // // console.log(otherCanvas);\n    // // console.log(canvasSize);\n  }\n  p5.windowResized = function() {\n    p5.resizeCanvas(window.innerWidth, window.innerHeight*.75);\n    if (client.type !== \"tutor\") {\n      canvasSize.width = window.innerWidth;\n      canvasSize.height = window.innerHeight*.9;\n      p5.resizeCanvas(canvasSize.width, canvasSize.height);\n      socket.emit('screenSize', canvasSize);\n    }\n    else {\n      console.log(otherCanvasSize);\n      screenSizeReceiver(otherCanvasSize);\n    }\n    mouseOffset.x = canvasSize.width/2;\n    mouseOffset.y = canvasSize.height/2;\n    for (var i=0; i<hist.length; i++) {\n      hist[i].display();\n    }\n  }\n\n  p5.setup = function () {\n    //socket.emit('requestScreenSize');\n    p5.createCanvas(canvasSize.width, canvasSize.height, p5.WEBGL);\n    p5.background(backgroundColor);\n    p5.strokeWeight(weight);\n    p5.stroke(color);\n    p5.cursor(p5.CROSS);\n    p5.textFont(font);\n    p5.textSize(32);\n    p5.fill(0);\n    p5.circle(0,0,50);\n    socket.emit('screenSize', canvasSize);\n  };\n\n\n  function receiveImage(file) {\n    console.log(file.name);\n  }\n  function insideCanvas() { //Used to determine if the mouse is clicking within the viewable canvas\n    if (toolBarDisplayed) {\n      if (p5.mouseX>0 && p5.mouseX<canvasSize.width && p5.mouseY>0 && p5.mouseY<canvasSize.height*.92) {\n        console.log(\"insideCanvas\");\n        return true;\n      }\n      else {\n        console.log(\"outside canvas\");\n        return false;\n      }\n    }\n    else {\n      if (p5.mouseX>0 && p5.mouseX<canvasSize.width && p5.mouseY>0 && p5.mouseY<canvasSize.height) {\n        console.log(\"insideCanvas\");\n        return true;\n      }\n      else {\n        console.log(\"outside canvas\");\n        return false;\n      }\n    }\n  }\n  function undoReceiver() {\n    redo.push(hist[hist.length-1]);\n    hist.pop();\n  }\n  sketch.undo = function() {\n    if (hist.length > 0) {\n      redo.push(hist[hist.length-1]);\n      hist.pop();\n      console.log(hist);\n      console.log(redo);\n      socket.emit('undo');\n    }\n  }\n  function redoReceiver() {\n    hist.push(redo[redo.length-1]);\n    redo.pop();\n  }\n  sketch.redo = function() {\n    if (redo.length > 0) {\n      hist.push(redo[redo.length-1]);\n      redo.pop();\n      console.log(hist);\n      console.log(redo);\n      socket.emit('redo');\n    }\n  }\n  function clearReceiver() {\n    p5.clear();\n    p5.setup();\n    hist = [];\n    redo = [];\n  }\n  sketch.clearButtonPressed = function() {\n    p5.clear();\n    p5.setup();\n    hist = [];\n    redo = [];\n  }\n  sketch.strokeWeightChange = function(aWeight) {\n    weight = aWeight\n    p5.strokeWeight(weight);\n  }\n  sketch.changeDrawType = function(aDrawType) {\n    drawType = aDrawType;\n  }\n  sketch.changeColor = function(aColor) {\n    if (drawType == 'erase') {\n      drawType = 'freeHand';\n    }\n    console.log(aColor);\n    color = aColor;\n  }\n  sketch.addText = function(text) {\n    p5.text(text, 50, -55);\n  }\n  sketch.historyChange = function(aPosition) {\n    for (var i=0; i<hist.length-aPosition; i++) {\n      redo.push(hist[hist.length-1]);\n      hist.pop();\n    }\n  }\n\n  p5.myCustomRedrawAccordingToNewPropsHandler = function (props) {\n    console.log(props.displayToolBar);\n    if (toolBarDisplayed !== props.displayToolBar) {\n      hist.pop(); //Eliminates object created when the toggle menu button is clicked\n    }\n    toolBarDisplayed = props.displayToolBar;\n  };\n\n  function startFreeHandReceiver(data) { // Recipient for mousePressed\n    stroke.push({'x': data.x, 'y': data.y});\n    drawFreeHand(stroke, data.weight, data.color);\n  }\n  function freeHandReceiver(data) { // Recipient for mouseDragged\n    stroke.push({'x': data.x/scaleBetweenCanvases.width, 'y': data.y/scaleBetweenCanvases.height});\n  }\n  function drawFreeHand(stroke, weight, color) {\n    var freeHandTest = new FreeHandObject(stroke, weight, color, p5);\n    hist.push(freeHandTest);\n  }\n\n  function startCircleReceiver(data) {\n    hist.push(new CircleObject(data.x, data.y, data.x, data.y, data.weight, data.color, p5));\n  }\n  function circleReceiver(data) {\n    hist[hist.length-1].setEdge(data.x, data.y);\n  }\n  function drawCircle(stroke, weight, color) {\n      console.log(stroke);\n      console.log(stroke[0]);\n      var circleTest = new CircleObject(stroke[0].x, stroke[0].y, stroke[stroke.length-1].x, stroke[stroke.length-1].y, weight, color, p5);\n      hist.push(circleTest);\n      console.log(circleTest);\n      console.log(stroke);\n  }\n\n  function startRectangleReceiver(data) {\n    hist.push(new RectangleObject(data.x, data.y, data.x, data.y, data.weight, data.color, p5));\n  }\n  function rectangleReceiver(data) {\n    hist[hist.length-1].setCorner(data.x, data.y);\n  }\n  function drawRectangle() {\n    hist.push(new RectangleObject(stroke[0].x, stroke[0].y, stroke[stroke.length-1].x, stroke[stroke.length-1].y, weight, color, p5));\n  }\n\n  function startEraseReceiver(data) {\n    stroke.push({'x': data.x, 'y': data.y});\n    console.log(data.color);\n    drawErase(stroke, data.weight);\n  }\n  function eraseReceiver(data) {\n    stroke.push({'x': data.x, 'y': data.y})\n  }\n  function drawErase(stroke, weight) {\n    hist.push(new EraseObject(stroke, weight, p5));\n    var data = {\n      x: stroke[0].x,\n      y: stroke[0].y\n    }\n    socket.emit('erase', data);\n  }\n\n  function pointReceiver(data) {  // Recipient for drawPoint\n    hist.push(new PointObject(data.x, data.y, data.color, p5));\n  }\n  function drawPoint() {\n    hist.push(new PointObject(stroke[0].x, stroke[0].y, color, p5));\n    var data = {\n      color: color,\n      x: stroke[0].x*scaleBetweenCanvases.width,\n      y: stroke[0].y*scaleBetweenCanvases.height,\n    }\n    socket.emit('point', data);\n  }\n\n\n  p5.mousePressed = function () {\n    if (insideCanvas()) {\n      stroke.push({'x': p5.mouseX-mouseOffset.x, 'y': p5.mouseY-mouseOffset.y});\n      // stroke.push({'x': p5.mouseX, 'y': p5.mouseY});\n      console.log(p5.mouseX + \" , \" + p5.mouseY)\n      switch(drawType) {\n        case 'freeHand':\n          drawFreeHand(stroke, weight, color);\n          var data = {\n            color: color,\n            weight: weight,\n            x: (p5.mouseX-mouseOffset.x)*scaleBetweenCanvases.width,\n            // x: (p5.mouseX)*scaleBetweenCanvases.width,\n            y: (p5.mouseY-mouseOffset.y)*scaleBetweenCanvases.height\n            // y: (p5.mouseY)*scaleBetweenCanvases.height\n          }\n          console.log(hist[0].points)\n          socket.emit('startFreeHand', data)\n          break;\n        case 'circle':\n          var data = {\n            color: color,\n            weight: weight,\n            x: (p5.mouseX-mouseOffset.x)*scaleBetweenCanvases.width,\n            y: (p5.mouseY-mouseOffset.y)*scaleBetweenCanvases.height\n          }\n          drawCircle(stroke, weight, color);\n          socket.emit('startCircle', data);\n          break;\n        case 'rectangle':\n          var data = {\n            color: color,\n            weight: weight,\n            x: (p5.mouseX-mouseOffset.x)*scaleBetweenCanvases.width,\n            y: (p5.mouseY-mouseOffset.y)*scaleBetweenCanvases.height\n          }\n          drawRectangle(stroke, weight, color);\n          socket.emit('startRectangle', data);\n          break;\n        case 'erase':\n          drawErase(stroke, weight);\n          var data = {\n            weight: weight,\n            x: p5.mouseX-mouseOffset.x,\n            y: p5.mouseY-mouseOffset.y\n          }\n          socket.emit('startErase', data)\n          break;\n        case 'point':\n          drawPoint();\n          break;\n      }\n    }\n  }\n\n  p5.mouseDragged = function () {\n    stroke.push({'x': p5.mouseX-mouseOffset.x, 'y': p5.mouseY-mouseOffset.y});\n    // stroke.push({'x': p5.mouseX, 'y': p5.mouseY});\n    var data = {\n      x: (p5.mouseX-mouseOffset.x),\n      y: (p5.mouseY-mouseOffset.y)\n    }\n    if (drawType === 'freeHand') {\n      socket.emit('freeHand', data);\n    }\n    else if (drawType === 'circle') {\n      hist[hist.length-1].setEdge(stroke[stroke.length-1].x, stroke[stroke.length-1].y);\n      socket.emit('circle', data);\n    }\n    else if (drawType === 'rectangle') {\n      hist[hist.length-1].setCorner(stroke[stroke.length-1].x, stroke[stroke.length-1].y);\n      socket.emit('rectangle', data);\n    }\n    else {\n      socket.emit('erase', data);\n    }\n    return false;\n  }\n\n  function releaseReceiver() {  // Recipient for mouseReleased\n    stroke = []\n  }\n  p5.mouseReleased =  function () {\n    console.log(hist);\n    stroke = [];\n    socket.emit('release');\n  }\n\n  p5.draw = function () {\n    p5.background(backgroundColor); //this line is to reset the background color to freshly draw over it\n    for (var i=0; i<hist.length; i++) {\n      hist[i].display();\n    }\n    p5.stroke('red')\n    p5.circle(-otherCanvasSize.width/2, otherCanvasSize.height/2, 8)\n    p5.circle(-otherCanvasSize.width/2, -otherCanvasSize.height/2, 8)\n    p5.circle(otherCanvasSize.width/2, otherCanvasSize.height/2, 8)\n    p5.circle(otherCanvasSize.width/2, -otherCanvasSize.height/2, 8)\n    \n    // console.log(otherCanvasSize.width)\n    // p5.line(0, otherCanvasSize.height, otherCanvasSize.width, otherCanvasSize.height)\n    // p5.line(otherCanvasSize.width, 0, otherCanvasSize.width, otherCanvasSize.height)\n  };\n\n};","import React, {Component} from 'react';\nimport './CanvasToolBar.css';\n// import ArrowIcon from '../../assets/Arrow-Icon.svg';\n\nclass CanvasToolBar extends Component {\n  constructor(props) {\n    super(props);\n    // this.state = {display: false};\n  }\n  // toggleDisplayToolBar() {\n  //   this.setState({display : !this.state.display});\n  //   console.log(this.state);\n  // }\n  render() {\n    return (\n      <div className=\"canvas-tool-bar\">\n\n      <div className={this.props.displayToolBar ? 'toggle-button' : 'display-toggle-button'}>\n        {/* <img id=\"arrow-icon\" className={this.props.displayToolBar ? 'down-arrow-icon' : 'up-arrow-icon'} alt=\"arrow icon\" src={ArrowIcon} onClick={this.props.toggleDisplayToolBar}/> */}\n      </div>\n      <div className={this.props.displayToolBar ? 'tool-bar' : 'display-tool-bar'}>\n        {/* <div className=\"history-slider\">\n          <input type=\"range\"  min=\"1\"  max=\"100\" step=\"1\" onChange={this.props.historyChange.bind(this)}/>\n        </div> */}\n        <label for=\"strokeWeight\">Stroke</label>\n        <input id=\"strokeWeight\" type=\"range\" defaultValue={this.props.strokeWeight}  min=\"1\"  max=\"10\" step=\"1\" onInput={this.props.strokeWeightChange.bind(this)}/>\n        {/* <input type=\"text\" className=\"text-input\" onKeyPress={this.props.addText}></input> */}\n        <div className=\"drop-down\">\n          <div className=\"drop-down-contents\">\n            <ul>\n              <li><button value='green' onClick={this.props.changeColor}>Green</button></li>\n              <li><button value='blue' onClick={this.props.changeColor}>Blue</button></li>\n              <li><button value='red' onClick={this.props.changeColor}>Red</button></li>\n              <li><button value='black' onClick={this.props.changeColor}>Black</button></li>\n            </ul>\n          </div>\n          <button>Colors</button>\n        </div>\n        <div className=\"drop-down\">\n          <div className=\"drop-down-contents\">\n            <ul>\n              <li><button value='rectangle' onClick={this.props.changeDrawType}>Rectangle</button></li>\n              <li><button value='circle' onClick={this.props.changeDrawType}>Circle</button></li>\n              <li><button value='point' onClick={this.props.changeDrawType}>Point</button></li>\n              <li><button value='freeHand' onClick={this.props.changeDrawType}>Free Hand</button></li>\n              <li><button value='erase' onClick={this.props.changeDrawType}>Erase</button></li>\n            </ul>\n          </div>\n          <button>Draw Tools</button>\n        </div>\n        <button onClick={this.props.clearButtonPressed}>Clear</button>\n        <button onClick={this.props.undo}>Undo</button>\n        <button onClick={this.props.redo}>Redo</button>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default CanvasToolBar;","import React from 'react';\nimport p5 from 'p5';\nimport P5Wrapper from 'react-p5-wrapper';\nimport sketch from '../sketches/sketch'\nimport CanvasToolBar from './CanvasToolBar';\n\nimport './Canvas.css'\n\n\nclass Canvas extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {redirect: false,\n                    color: 'black',\n                    drawType: 'circle',\n                    strokeWeight: '1',\n                    displayToolBar: true,\n                                    };\n    };\n    \n    toggleDisplayToolBar() {\n        this.setState({displayToolBar: !this.state.displayToolBar});\n        console.log(this.state);\n    }\n    undo(e) {\n        sketch.undo();\n    }\n    redo(e) {\n        sketch.redo();\n    }\n    clearButtonPressed(e) {\n        sketch.clearButtonPressed();\n    }\n    \n    changeColor(e) {\n        sketch.changeColor(e.target.value);\n    }\n    \n    strokeWeightChange(e) {\n        this.setState({strokeWeight:e.target.value});\n        sketch.strokeWeightChange(e.target.value);\n        console.log(\"slider: \" + this.state.strokeWeight);\n    }\n    changeDrawType(e) {\n        sketch.changeDrawType(e.target.value);\n    }\n    addText(e) {\n        if (e.key === 'Enter') {\n        sketch.addText(e.target.value);\n        }\n    }\n    historyChange(e) {\n        sketch.historyChange(e.target.value);\n    }\n    // RequestEmotionalResponse() {\n    //     this.setState({redirect: false});\n    // }\n    // displayDropDown() {\n    //   console.log(\"ran\")\n    //   var dropdown = document.getElementsByClassName(\"drop-down-contents\")[0];\n    //   (dropdown.style.display == \"block\") ? dropdown.style.display = \"none\" : dropdown.style.display = \"block\";\n    // }\n    render() {\n        // if(this.state.redirect) {\n        //   return <PreSessionSurvey RequestEmotionalResponse={this.RequestEmotionalResponse.bind(this)}/>\n        // }\n        return(\n        <div className=\"canvas\">\n            <P5Wrapper sketch={sketch} displayToolBar={this.state.displayToolBar} strokeWeight={this.state.strokeWeight} drawType={this.state.drawType} color={this.state.color}/>\n            <CanvasToolBar sketch={sketch} toggleDisplayToolBar={this.toggleDisplayToolBar.bind(this)} displayToolBar={this.state.displayToolBar} undo={this.undo} redo={this.redo} historyChange={this.historyChange} addText={this.addText} changeDrawType={this.changeDrawType} strokeWeight={this.state.strokeWeight} strokeWeightChange={this.strokeWeightChange.bind(this)} clearButtonPressed={this.clearButtonPressed.bind(this)} changeColor={this.changeColor.bind(this)}/> {/*onClick={this.changeHandler.bind(this)}*/}\n        </div>\n        )\n    }\n    }\n    \n\nexport default Canvas;","import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { render } from '@testing-library/react';\nimport Canvas from './components/Canvas'\n\n//need to create function that finds within array of objects\n//use above function to update/signal appropriate peer in peers list, by socketId\n//setup function to handle incoming data from p2p channel (add strokes to history)\n\n//use later lifecycle method or a callback to add media stream to p2p channel\n\n// canvas work and history\n\n//create a disconnect function that cleans up all connections when leaving,\n// and notifies server to relay message to all other participants\n\n//add support for rooms from url params\n\n//DEPLOYMENT\n//add axios and env variables to app. Change ip addresses\n//deploy to github pages\n//change gh pages url\n//deploy server\n\n//TESTING\n//test rubberbanding of page\n//test connections on other devices (laptop, phone, tablet) from diff networks\n\n//BACKUP PLAN\n//create optional use to send data via sockets rather than p2p\n\n// const socket = io('http://localhost:4000')\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    // this.peers = {}\n  }\n\n  componentDidMount(){\n    // //when signaled that someone has joined the chat\n    // //create a new peer as initiator and send p2pOffer to new participant\n    // socket.on('newParticipant', (socketId)=>{\n    //   console.log('received new participant ' + socketId)\n    //   const newPeer = new Peer({ initiator: true })\n    //   this.peers[socketId] = newPeer\n    //   this.peers[socketId].on('signal', data => {\n    //     const socketIdsAndSignal = {\n    //       toSocketId: socketId,\n    //       fromSocketId: socket.id,\n    //       signalData: data\n    //     }\n    //     this.p2pOffer(socketIdsAndSignal);\n        \n    //   })\n    // })  \n\n    // //when receiving a p2pOffer\n    // socket.on('p2pOffer', payload => {\n    //   console.log('received p2pOffer')\n    //   console.log(payload)\n    //   //create a new peer to receive\n    //   const receivingPeer = new Peer();\n    //   //add new peer to the peers array\n    //   const socketId = socket.id\n    //   this.peers[socketId] = receivingPeer\n    //   //signal new peer, referenced from peer array\n    //   this.peers[socketId].signal(payload.signalData)\n\n    //   this.peers[socketId].on('signal', data=> {\n    //     console.log('receiving peer has signaled itself')\n    //     const signalReply = {\n    //       toSocketId: payload.fromSocketId,\n    //       fromSocketId: payload.toSocketId,\n    //       signalData: data\n    //     }\n    //     this.p2pAnswer(signalReply)\n    //   })\n    // })\n\n    // socket.on('p2pAnswer', payload => {\n    //   const socketId = payload.fromSocketId\n    //   console.log('answerers socket id: ' + socketId)\n    //   console.log('payload: ')\n    //   console.log(payload)\n    //   console.log('peers: ')\n    //   console.log(this.peers)\n    //   // this.peers.socketId.signal(payload.signalData)\n    //   this.peers[socketId].signal(payload.signalData)\n    //   this.peers[socketId].on('connect', ()=>{\n    //   // this.peers.socketId.on('connect', () => { \n    //     console.log('peers have connected!')\n    //   })\n    // })\n  }\n\n  // p2pOffer = (data) => {\n  //   socket.emit('p2pOffer', data)\n  // }\n\n  // p2pAnswer = (data) => {\n  //   socket.emit('p2pAnswer', data)\n  // }\n\n  render() {\n    return(\n      <div>\n        <Canvas />\n      </div>\n    )\n  }\n}\n\n// function App(){\n  \n//   useEffect(()=> {\n//     const socket = io('http://localhost:4000');\n//     socket.on('newParticipant', ()=>{\n//       console.log('received new participant')\n//     })\n//   })\n\n//   return (\n//     <div>\n//       Chat test in console\n//     </div>\n//   );\n// }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}